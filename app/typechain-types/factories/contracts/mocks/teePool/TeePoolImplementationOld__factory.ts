/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TeePoolImplementationOld,
  TeePoolImplementationOldInterface,
} from "../../../../contracts/mocks/teePool/TeePoolImplementationOld";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "CancelDelayNotPassed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientFee",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidJobStatus",
    type: "error",
  },
  {
    inputs: [],
    name: "JobCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "NoActiveTee",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "NotJobOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NothingToClaim",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "TeeAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "TeeNotActive",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "teeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "JobCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "JobSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "attestator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "ProofAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "teeAddress",
        type: "address",
      },
    ],
    name: "TeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "teeAddress",
        type: "address",
      },
    ],
    name: "TeeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activeTeeList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "activeTeeListAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "teeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "enum ITeePool.TeeStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawnAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ITeePool.TeeInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "activeTeesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "score",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dlpId",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
              {
                internalType: "string",
                name: "proofUrl",
                type: "string",
              },
              {
                internalType: "string",
                name: "instruction",
                type: "string",
              },
            ],
            internalType: "struct IDataRegistry.ProofData",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct IDataRegistry.Proof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "addProof",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teeAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "addTee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "cancelJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataRegistry",
    outputs: [
      {
        internalType: "contract IDataRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "dataRegistryAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialCancelDelay",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teeAddress",
        type: "address",
      },
    ],
    name: "isTee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "jobTee",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "teeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "enum ITeePool.TeeStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawnAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ITeePool.TeeInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "jobId",
        type: "uint256",
      },
    ],
    name: "jobs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "fileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bidAmount",
            type: "uint256",
          },
          {
            internalType: "enum ITeePool.JobStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "addedTimestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
        ],
        internalType: "struct ITeePool.Job",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jobsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teeAddress",
        type: "address",
      },
    ],
    name: "removeTee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "requestContributionProof",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "submitJob",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "teeFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teeList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "teeListAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "teeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "enum ITeePool.TeeStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawnAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ITeePool.TeeInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "teeAddress",
        type: "address",
      },
    ],
    name: "tees",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "teeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "enum ITeePool.TeeStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawnAmount",
            type: "uint256",
          },
        ],
        internalType: "struct ITeePool.TeeInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newCancelDelay",
        type: "uint256",
      },
    ],
    name: "updateCancelDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IDataRegistry",
        name: "newDataRegistry",
        type: "address",
      },
    ],
    name: "updateDataRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newTeeFee",
        type: "uint256",
      },
    ],
    name: "updateTeeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612349620000fe6000396000818161143d0152818161146601526115ac01526123496000f3fe60806040526004361061021a5760003560e01c8063715018a611610123578063c26045f7116100ab578063e30c39781161006f578063e30c3978146105f1578063e7aa019414610606578063eb07b9c614610619578063f2fde38b1461062e578063f5d548d81461064e57600080fd5b8063c26045f714610580578063ca45a28814610593578063d2ef73d9146105b3578063d402919f146105c6578063d5fbcf42146105db57600080fd5b80638da5cb5b116100f25780638da5cb5b146104b5578063961884aa146104e2578063a39c1d6b14610502578063a7016f7014610522578063ad3cb1cc1461054257600080fd5b8063715018a61461045657806373c883961461046b57806379ba50971461048b5780638456cb59146104a057600080fd5b80634e71d92d116101a6578063576d6d4d11610175578063576d6d4d146103ba5780635b818d36146103da5780635c975abb146103ef578063638a0f091461042057806369e8de561461043657600080fd5b80634e71d92d1461035b5780634f1ef2861461037057806352d1902d1461038357806354fd4d50146103a657600080fd5b80631a204098116101ed5780631a204098146102b95780631dffa3dc146102e6578063288fffac1461030657806336011aca146103265780633f4ba83a1461034657600080fd5b80630e2a14a31461021f57806310f3cd30146102415780631794bb3c1461026c578063180aedf31461028c575b600080fd5b34801561022b57600080fd5b5061023f61023a366004611b98565b610664565b005b34801561024d57600080fd5b5061025661068e565b6040516102639190611bb5565b60405180910390f35b34801561027857600080fd5b5061023f610287366004611c02565b61069f565b34801561029857600080fd5b506102ac6102a7366004611c43565b6107f1565b6040516102639190611c72565b3480156102c557600080fd5b506102d96102d4366004611c43565b610878565b6040516102639190611d13565b3480156102f257600080fd5b5061023f610301366004611c43565b6108d2565b34801561031257600080fd5b5061023f610321366004611b98565b610a69565b34801561033257600080fd5b5061023f610341366004611e6c565b610aff565b34801561035257600080fd5b5061023f610bb1565b34801561036757600080fd5b5061023f610bc3565b61023f61037e366004611e6c565b610ce0565b34801561038f57600080fd5b50610398610cff565b604051908152602001610263565b3480156103b257600080fd5b506001610398565b3480156103c657600080fd5b5061023f6103d5366004611c43565b610d1c565b3480156103e657600080fd5b50610256610d29565b3480156103fb57600080fd5b506000805160206122d48339815191525460ff165b6040519015158152602001610263565b34801561042c57600080fd5b5061039860095481565b34801561044257600080fd5b5061023f610451366004611c43565b610d35565b34801561046257600080fd5b5061023f610d42565b34801561047757600080fd5b506102d9610486366004611c43565b610d54565b34801561049757600080fd5b5061023f610d6a565b3480156104ac57600080fd5b5061023f610db4565b3480156104c157600080fd5b506104ca610dc4565b6040516001600160a01b039091168152602001610263565b3480156104ee57600080fd5b506102d96104fd366004611b98565b610df9565b34801561050e57600080fd5b506000546104ca906001600160a01b031681565b34801561052e57600080fd5b5061041061053d366004611b98565b610f2a565b34801561054e57600080fd5b50610573604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102639190611ebc565b61023f61058e366004611ecf565b610f62565b34801561059f57600080fd5b506102d96105ae366004611c43565b6110c1565b61023f6105c1366004611c43565b6110d7565b3480156105d257600080fd5b506103986111af565b3480156105e757600080fd5b5061039860015481565b3480156105fd57600080fd5b506104ca6111bb565b61023f610614366004611c43565b6111e4565b34801561062557600080fd5b506103986111ed565b34801561063a57600080fd5b5061023f610649366004611b98565b6111f9565b34801561065a57600080fd5b5061039860085481565b61066c61127e565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b606061069a60056112b0565b905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156106e55750825b905060008267ffffffffffffffff1660011480156107025750303b155b905081158015610710575080155b1561072e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561075857845460ff60401b1916600160401b1785555b6107606112c4565b6107686112c4565b6107706112cc565b6107786112dc565b600080546001600160a01b0319166001600160a01b03891617905560098690556107a1886112ec565b83156107e757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6107f9611b14565b600082815260026020818152604092839020835160a0810185528154815260018201549281019290925291820154909283019060ff16600381111561084057610840611c5c565b600381111561085157610851611c5c565b8152600382015460208201526004909101546001600160a01b031660409091015292915050565b610880611b54565b61088a6005611324565b6000036108aa576040516329ed7f2760e01b815260040160405180910390fd5b6108cc6104fd6108ba6005611324565b6108c49085611ff6565b60059061132e565b92915050565b6108da61133a565b6000818152600260205260409020600401546001600160a01b0316331461091457604051639015f92360e01b815260040160405180910390fd5b60016000828152600260208190526040909120015460ff16600381111561093d5761093d611c5c565b1461095b5760405163b969563b60e01b815260040160405180910390fd5b600954600082815260026020526040902060030154429161097b9161202e565b111561099a57604051634b40143d60e01b815260040160405180910390fd5b6000818152600260208190526040808320918201805460ff1916600317905560019091015490513391908381818185875af1925050503d80600081146109fc576040519150601f19603f3d011682016040523d82523d6000602084013e610a01565b606091505b5050905080610a23576040516312171d8360e31b815260040160405180910390fd5b60405182907f68a66a704ceacc38da3f12c63779e47866d9d72e875ec5d43237777adc666d6590600090a250610a6660016000805160206122f483398151915255565b50565b610a7161127e565b610a7c600582611386565b610a99576040516310eddccd60e01b815260040160405180910390fd5b6001600160a01b0381166000908152600760205260409020805460ff19166002179055610ac76005826113a8565b506040516001600160a01b038216907f18a003b29a5d1b1d6f0603956003fdc00a42ea8db3825c24a6bf532d5bae0bdf90600090a250565b610b0761127e565b610b12600583611386565b15610b3057604051637668d56b60e01b815260040160405180910390fd5b610b3b6003836113bd565b50610b476005836113bd565b506001600160a01b0382166000908152600760205260409020805460ff19166001908117825501610b7882826120cb565b506040516001600160a01b038316907fcc7ab74a9b11b56487e4c7356320d0be894972f6132884ccd04e04baa284fb7990600090a25050565b610bb961127e565b610bc16113d2565b565b610bcb61133a565b3360009081526007602052604081206003810154600290910154610bef919061218b565b905080600003610c12576040516312d37ee560e31b815260040160405180910390fd5b3360008181526007602052604080822060028101546003909101555190919083908381818185875af1925050503d8060008114610c6b576040519150601f19603f3d011682016040523d82523d6000602084013e610c70565b606091505b5050905080610c92576040516312171d8360e31b815260040160405180910390fd5b60405182815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a25050610bc160016000805160206122f483398151915255565b610ce8611432565b610cf1826114d7565b610cfb82826114df565b5050565b6000610d096115a1565b506000805160206122b483398151915290565b610d2461127e565b600955565b606061069a60036112b0565b610d3d61127e565b600855565b610d4a61127e565b610bc160006112ec565b610d5c611b54565b6108cc6104fd60038461132e565b3380610d746111bb565b6001600160a01b031614610dab5760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b610a66816112ec565b610dbc61127e565b610bc16115ea565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b610e01611b54565b6040805160a0810182526001600160a01b03841680825260009081526007602090815292902060010180549192830191610e3a90612041565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6690612041565b8015610eb35780601f10610e8857610100808354040283529160200191610eb3565b820191906000526020600020905b815481529060010190602001808311610e9657829003601f168201915b50505091835250506001600160a01b03841660009081526007602090815260409091205491019060ff166002811115610eee57610eee611c5c565b81526001600160a01b0390931660008181526007602081815260408084206002810154838a015294909352526003909101549301929092525090565b600060016001600160a01b03831660009081526007602052604090205460ff166002811115610f5b57610f5b611c5c565b1492915050565b60013360009081526007602052604090205460ff166002811115610f8857610f88611c5c565b14610fa6576040516310eddccd60e01b815260040160405180910390fd5b60008281526002602052604090206001600282015460ff166003811115610fcf57610fcf611c5c565b14610fed576040516361ff6d4560e11b815260040160405180910390fd5b600054815460405163c26045f760e01b81526001600160a01b039092169163c26045f79161101f91869060040161219e565b600060405180830381600087803b15801561103957600080fd5b505af115801561104d573d6000803e3d6000fd5b505050600182015433600090815260076020526040812060020180549293509161107890849061202e565b90915550506002818101805460ff191690911790558054604051849033907f41eb9d6336d189fb4bf444a6b5056628c51aa4405c87f7389a107686e805726390600090a4505050565b6110c9611b54565b6108cc6104fd60058461132e565b6008543410156110f95760405162976f7560e21b815260040160405180910390fd5b6001805490600061110983612239565b909155505060018054600090815260026020819052604080832085905583548352808320349085015583548352808320426003909101558354835280832060040180546001600160a01b031916331790558354835290912001805460ff191682800217905550806001547ff54343d979b7d5a02524b04415a6513e2114a8284ccb9cc0e58c12a2190cb230346040516111a491815260200190565b60405180910390a350565b600061069a6005611324565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00610de9565b610a66816110d7565b600061069a6003611324565b61120161127e565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255611245610dc4565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b33611287610dc4565b6001600160a01b031614610bc15760405163118cdaa760e01b8152336004820152602401610da2565b606060006112bd83611633565b9392505050565b610bc161168f565b6112d461168f565b610bc16116d8565b6112e461168f565b610bc16116f9565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155610cfb82611701565b60006108cc825490565b60006112bd8383611772565b6000805160206122f483398151915280546001190161136c57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b60016000805160206122f483398151915255565b6001600160a01b038116600090815260018301602052604081205415156112bd565b60006112bd836001600160a01b03841661179c565b60006112bd836001600160a01b03841661188f565b6113da6118de565b6000805160206122d4833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806114b957507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114ad6000805160206122b4833981519152546001600160a01b031690565b6001600160a01b031614155b15610bc15760405163703e46dd60e11b815260040160405180910390fd5b610a6661127e565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611539575060408051601f3d908101601f1916820190925261153691810190612252565b60015b61156157604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610da2565b6000805160206122b4833981519152811461159257604051632a87526960e21b815260048101829052602401610da2565b61159c838361190e565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bc15760405163703e46dd60e11b815260040160405180910390fd5b6115f2611964565b6000805160206122d4833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611414565b60608160000180548060200260200160405190810160405280929190818152602001828054801561168357602002820191906000526020600020905b81548152602001906001019080831161166f575b50505050509050919050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610bc157604051631afcd79f60e31b815260040160405180910390fd5b6116e061168f565b6000805160206122d4833981519152805460ff19169055565b61137261168f565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b60008260000182815481106117895761178961226b565b9060005260206000200154905092915050565b600081815260018301602052604081205480156118855760006117c060018361218b565b85549091506000906117d49060019061218b565b90508082146118395760008660000182815481106117f4576117f461226b565b90600052602060002001549050808760000184815481106118175761181761226b565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061184a5761184a612281565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108cc565b60009150506108cc565b60008181526001830160205260408120546118d6575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108cc565b5060006108cc565b6000805160206122d48339815191525460ff16610bc157604051638dfc202b60e01b815260040160405180910390fd5b61191782611995565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561195c5761159c82826119fa565b610cfb611a70565b6000805160206122d48339815191525460ff1615610bc15760405163d93c066560e01b815260040160405180910390fd5b806001600160a01b03163b6000036119cb57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610da2565b6000805160206122b483398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b031684604051611a179190612297565b600060405180830381855af49150503d8060008114611a52576040519150601f19603f3d011682016040523d82523d6000602084013e611a57565b606091505b5091509150611a67858383611a8f565b95945050505050565b3415610bc15760405163b398979f60e01b815260040160405180910390fd5b606082611aa457611a9f82611aeb565b6112bd565b8151158015611abb57506001600160a01b0384163b155b15611ae457604051639996b31560e01b81526001600160a01b0385166004820152602401610da2565b5092915050565b805115611afb5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060a00160405280600081526020016000815260200160006003811115611b4057611b40611c5c565b815260006020820181905260409091015290565b6040805160a0810182526000808252606060208301529091820190815260200160008152602001600081525090565b6001600160a01b0381168114610a6657600080fd5b600060208284031215611baa57600080fd5b81356112bd81611b83565b6020808252825182820181905260009190848201906040850190845b81811015611bf65783516001600160a01b031683529284019291840191600101611bd1565b50909695505050505050565b600080600060608486031215611c1757600080fd5b8335611c2281611b83565b92506020840135611c3281611b83565b929592945050506040919091013590565b600060208284031215611c5557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b8151815260208083015190820152604082015160a082019060048110611c9a57611c9a611c5c565b6040830152606083810151908301526080928301516001600160a01b0316929091019190915290565b60005b83811015611cde578181015183820152602001611cc6565b50506000910152565b60008151808452611cff816020860160208601611cc3565b601f01601f19169290920160200192915050565b602080825282516001600160a01b03168282015282015160a06040830152600090611d4160c0840182611ce7565b9050604084015160038110611d5857611d58611c5c565b8060608501525060608401516080840152608084015160a08401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611db657611db6611d7d565b60405290565b60405160a0810167ffffffffffffffff81118282101715611db657611db6611d7d565b600082601f830112611df057600080fd5b813567ffffffffffffffff80821115611e0b57611e0b611d7d565b604051601f8301601f19908116603f01168101908282118183101715611e3357611e33611d7d565b81604052838152866020858801011115611e4c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611e7f57600080fd5b8235611e8a81611b83565b9150602083013567ffffffffffffffff811115611ea657600080fd5b611eb285828601611ddf565b9150509250929050565b6020815260006112bd6020830184611ce7565b60008060408385031215611ee257600080fd5b82359150602083013567ffffffffffffffff80821115611f0157600080fd5b9084019060408287031215611f1557600080fd5b611f1d611d93565b823582811115611f2c57600080fd5b611f3888828601611ddf565b825250602083013582811115611f4d57600080fd5b929092019160a08388031215611f6257600080fd5b611f6a611dbc565b8335815260208401356020820152604084013583811115611f8a57600080fd5b611f9689828701611ddf565b604083015250606084013583811115611fae57600080fd5b611fba89828701611ddf565b606083015250608084013583811115611fd257600080fd5b611fde89828701611ddf565b60808301525060208201529396939550929350505050565b60008261201357634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b808201808211156108cc576108cc612018565b600181811c9082168061205557607f821691505b60208210810361207557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561159c576000816000526020600020601f850160051c810160208610156120a45750805b601f850160051c820191505b818110156120c3578281556001016120b0565b505050505050565b815167ffffffffffffffff8111156120e5576120e5611d7d565b6120f9816120f38454612041565b8461207b565b602080601f83116001811461212e57600084156121165750858301515b600019600386901b1c1916600185901b1785556120c3565b600085815260208120601f198616915b8281101561215d5788860151825594840194600190910190840161213e565b508582101561217b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156108cc576108cc612018565b82815260406020820152600082516040808401526121bf6080840182611ce7565b90506020840151603f198483030160608501528051825260208101516020830152604081015160a060408401526121f960a0840182611ce7565b9050606082015183820360608501526122128282611ce7565b91505060808201519150828103608084015261222e8183611ce7565b979650505050505050565b60006001820161224b5761224b612018565b5060010190565b60006020828403121561226457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600082516122a9818460208701611cc3565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033009b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212200c1c3545df11a2780eb75225b7bc9dbf70f77738ba1f048dcc18e32514d9f83c64736f6c63430008180033";

type TeePoolImplementationOldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TeePoolImplementationOldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TeePoolImplementationOld__factory extends ContractFactory {
  constructor(...args: TeePoolImplementationOldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TeePoolImplementationOld & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TeePoolImplementationOld__factory {
    return super.connect(runner) as TeePoolImplementationOld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TeePoolImplementationOldInterface {
    return new Interface(_abi) as TeePoolImplementationOldInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TeePoolImplementationOld {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TeePoolImplementationOld;
  }
}
