/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DataRegistryImplementation,
  DataRegistryImplementationInterface,
} from "../../../contracts/dataRegistry/DataRegistryImplementation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotFileOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "FileAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PermissionGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "proofIndex",
        type: "uint256",
      },
    ],
    name: "ProofAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
    ],
    name: "addFile",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "addFilePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
        ],
        internalType: "struct IDataRegistry.Permission[]",
        name: "permissions",
        type: "tuple[]",
      },
    ],
    name: "addFileWithPermissions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "score",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dlpId",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
              {
                internalType: "string",
                name: "proofUrl",
                type: "string",
              },
              {
                internalType: "string",
                name: "instruction",
                type: "string",
              },
            ],
            internalType: "struct IDataRegistry.ProofData",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct IDataRegistry.Proof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "addProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "filePermissions",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "fileProofs",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "score",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dlpId",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "metadata",
                type: "string",
              },
              {
                internalType: "string",
                name: "proofUrl",
                type: "string",
              },
              {
                internalType: "string",
                name: "instruction",
                type: "string",
              },
            ],
            internalType: "struct IDataRegistry.ProofData",
            name: "data",
            type: "tuple",
          },
        ],
        internalType: "struct IDataRegistry.Proof",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fileId",
        type: "uint256",
      },
    ],
    name: "files",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "addedAtBlock",
            type: "uint256",
          },
        ],
        internalType: "struct IDataRegistry.FileResponse",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "filesCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611f656100fd60003960008181610f7701528181610fa001526110e60152611f656000f3fe6080604052600436106101355760003560e01c8063ad3cb1cc116100ab578063dfb5e9ba1161006f578063dfb5e9ba14610354578063e30c39781461036a578063eb9b9b641461037f578063f2fde38b1461039f578063f4c714b4146103bf578063f75cf867146103ec57600080fd5b8063ad3cb1cc14610296578063afbfc156146102c7578063c26045f7146102e7578063c4d66de814610307578063dbda68db1461032757600080fd5b806360f1c43a116100fd57806360f1c43a146101d0578063715018a6146101fd57806379ba5097146102125780638456cb59146102275780638da5cb5b1461023c578063ac9650d81461026957600080fd5b80633f4ba83a1461013a5780634f1ef2861461015157806352d1902d1461016457806354fd4d501461018c5780635c975abb146101a0575b600080fd5b34801561014657600080fd5b5061014f61040c565b005b61014f61015f3660046116e1565b61041e565b34801561017057600080fd5b5061017961043d565b6040519081526020015b60405180910390f35b34801561019857600080fd5b506001610179565b3480156101ac57600080fd5b50600080516020611f108339815191525460ff166040519015158152602001610183565b3480156101dc57600080fd5b506101f06101eb36600461172e565b61045a565b60405161018391906117aa565b34801561020957600080fd5b5061014f610514565b34801561021e57600080fd5b5061014f610526565b34801561023357600080fd5b5061014f610573565b34801561024857600080fd5b50610251610583565b6040516001600160a01b039091168152602001610183565b34801561027557600080fd5b506102896102843660046117bd565b6105b8565b6040516101839190611831565b3480156102a257600080fd5b506101f0604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156102d357600080fd5b506101796102e2366004611895565b61069f565b3480156102f357600080fd5b5061014f6103023660046119cf565b6107a2565b34801561031357600080fd5b5061014f610322366004611af5565b610890565b34801561033357600080fd5b50610347610342366004611b10565b6109b6565b6040516101839190611b32565b34801561036057600080fd5b5061017960005481565b34801561037657600080fd5b50610251610c5a565b34801561038b57600080fd5b5061017961039a366004611bc7565b610c83565b3480156103ab57600080fd5b5061014f6103ba366004611af5565b610c9f565b3480156103cb57600080fd5b506103df6103da366004611c03565b610d24565b6040516101839190611c1c565b3480156103f857600080fd5b5061014f610407366004611c6a565b610e30565b610414610eda565b61041c610f0c565b565b610426610f6c565b61042f82611011565b6104398282611019565b5050565b60006104476110db565b50600080516020611ef083398151915290565b60008281526001602090815260408083206001600160a01b0385168452600501909152902080546060919061048e90611cc0565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90611cc0565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905092915050565b61051c610eda565b61041c6000611124565b3380610530610c5a565b6001600160a01b0316146105675760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61057081611124565b50565b61057b610eda565b61041c61115c565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b604080516000815260208101909152606090826001600160401b038111156105e2576105e26115e2565b60405190808252806020026020018201604052801561061557816020015b60608152602001906001900390816106005790505b50915060005b83811015610697576106723086868481811061063957610639611d10565b905060200281019061064b9190611d26565b8560405160200161065e93929190611d73565b6040516020818303038152906040526111a5565b83828151811061068457610684611d10565b602090810291909101015260010161061b565b505092915050565b6000806106ac858561121b565b905060005b8351811015610797578381815181106106cc576106cc611d10565b60200260200101516020015160016000848152602001908152602001600020600501600086848151811061070257610702611d10565b6020026020010151600001516001600160a01b03166001600160a01b03168152602001908152602001600020908161073a9190611de2565b5083818151811061074d5761074d611d10565b6020026020010151600001516001600160a01b0316827f6e0403ef2b13328247bf9260ad8dd9c18fb5a18b95ea25de817ca991da05929b60405160405180910390a36001016106b1565b5090505b9392505050565b6107aa6112cf565b6000828152600160205260408120600301805482906107c890611ea1565b9182905550600084815260016020908152604080832084845260040190915290208351919250839181906107fc9082611de2565b506020820151816001016000820151816000015560208201518160010155604082015181600201908161082f9190611de2565b50606082015160038201906108449082611de2565b50608082015160048201906108599082611de2565b50506040518493508692507faf40333be7583051bc0470d0b829c7717be60e0b467a5f5fd722c30e1a8b00c69150600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156108d55750825b90506000826001600160401b031660011480156108f15750303b155b9050811580156108ff575080155b1561091d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561094757845460ff60401b1916600160401b1785555b61094f611300565b610957611300565b61095f611308565b61096886611124565b83156109ae57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6109be611582565b60008381526001602090815260408083208584526004019091529081902081518083019092528054829082906109f390611cc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1f90611cc0565b8015610a6c5780601f10610a4157610100808354040283529160200191610a6c565b820191906000526020600020905b815481529060010190602001808311610a4f57829003601f168201915b50505050508152602001600182016040518060a00160405290816000820154815260200160018201548152602001600282018054610aa990611cc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad590611cc0565b8015610b225780601f10610af757610100808354040283529160200191610b22565b820191906000526020600020905b815481529060010190602001808311610b0557829003601f168201915b50505050508152602001600382018054610b3b90611cc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6790611cc0565b8015610bb45780601f10610b8957610100808354040283529160200191610bb4565b820191906000526020600020905b815481529060010190602001808311610b9757829003601f168201915b50505050508152602001600482018054610bcd90611cc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf990611cc0565b8015610c465780601f10610c1b57610100808354040283529160200191610c46565b820191906000526020600020905b815481529060010190602001808311610c2957829003601f168201915b505050919092525050509052509392505050565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006105a8565b6000610c8d6112cf565b610c97823361121b565b90505b919050565b610ca7610eda565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b0383169081178255610ceb610583565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b610d5860405180608001604052806000815260200160006001600160a01b0316815260200160608152602001600081525090565b600082815260016020818152604092839020835160808101855286815281546001600160a01b03169281019290925291820180549293919291830191610d9d90611cc0565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc990611cc0565b8015610e165780601f10610deb57610100808354040283529160200191610e16565b820191906000526020600020905b815481529060010190602001808311610df957829003601f168201915b505050505081526020018260020154815250915050919050565b610e386112cf565b6000838152600160205260409020546001600160a01b03163314610e6f5760405163abea322960e01b815260040160405180910390fd5b60008381526001602090815260408083206001600160a01b03861684526005019091529020610e9e8282611de2565b506040516001600160a01b0383169084907f6e0403ef2b13328247bf9260ad8dd9c18fb5a18b95ea25de817ca991da05929b90600090a3505050565b33610ee3610583565b6001600160a01b03161461041c5760405163118cdaa760e01b815233600482015260240161055e565b610f14611318565b600080516020611f10833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610ff357507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610fe7600080516020611ef0833981519152546001600160a01b031690565b6001600160a01b031614155b1561041c5760405163703e46dd60e11b815260040160405180910390fd5b610570610eda565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611073575060408051601f3d908101601f1916820190925261107091810190611eba565b60015b61109b57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161055e565b600080516020611ef083398151915281146110cc57604051632a87526960e21b81526004810182905260240161055e565b6110d68383611348565b505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461041c5760405163703e46dd60e11b815260040160405180910390fd5b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b03191681556104398261139e565b6111646112cf565b600080516020611f10833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833610f4e565b6060600080846001600160a01b0316846040516111c29190611ed3565b600060405180830381855af49150503d80600081146111fd576040519150601f19603f3d011682016040523d82523d6000602084013e611202565b606091505b509150915061121285838361140f565b95945050505050565b600080600080815461122c90611ea1565b9182905550600081815260016020819052604090912080546001600160a01b0319166001600160a01b038716178155919250016112698582611de2565b506000818152600160205260409081902043600290910155516001600160a01b0384169082907f2980b13036c0d9df6b71ea9e9c09536efd24d7dd1868e29aa730f0c3fbd1a0dc906112bc9088906117aa565b60405180910390a3505060005492915050565b600080516020611f108339815191525460ff161561041c5760405163d93c066560e01b815260040160405180910390fd5b61041c61146b565b61131061146b565b61041c6114b4565b600080516020611f108339815191525460ff1661041c57604051638dfc202b60e01b815260040160405180910390fd5b611351826114d5565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115611396576110d682826111a5565b61043961153a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b6060826114245761141f82611559565b61079b565b815115801561143b57506001600160a01b0384163b155b1561146457604051639996b31560e01b81526001600160a01b038516600482015260240161055e565b508061079b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661041c57604051631afcd79f60e31b815260040160405180910390fd5b6114bc61146b565b600080516020611f10833981519152805460ff19169055565b806001600160a01b03163b60000361150b57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161055e565b600080516020611ef083398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b341561041c5760405163b398979f60e01b815260040160405180910390fd5b8051156115695780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060400160405280606081526020016115c66040518060a0016040528060008152602001600081526020016060815260200160608152602001606081525090565b905290565b80356001600160a01b0381168114610c9a57600080fd5b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561161a5761161a6115e2565b60405290565b60405160a081016001600160401b038111828210171561161a5761161a6115e2565b604051601f8201601f191681016001600160401b038111828210171561166a5761166a6115e2565b604052919050565b600082601f83011261168357600080fd5b81356001600160401b0381111561169c5761169c6115e2565b6116af601f8201601f1916602001611642565b8181528460208386010111156116c457600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156116f457600080fd5b6116fd836115cb565b915060208301356001600160401b0381111561171857600080fd5b61172485828601611672565b9150509250929050565b6000806040838503121561174157600080fd5b82359150611751602084016115cb565b90509250929050565b60005b8381101561177557818101518382015260200161175d565b50506000910152565b6000815180845261179681602086016020860161175a565b601f01601f19169290920160200192915050565b60208152600061079b602083018461177e565b600080602083850312156117d057600080fd5b82356001600160401b03808211156117e757600080fd5b818501915085601f8301126117fb57600080fd5b81358181111561180a57600080fd5b8660208260051b850101111561181f57600080fd5b60209290920196919550909350505050565b600060208083016020845280855180835260408601915060408160051b87010192506020870160005b8281101561188857603f1988860301845261187685835161177e565b9450928501929085019060010161185a565b5092979650505050505050565b6000806000606084860312156118aa57600080fd5b83356001600160401b03808211156118c157600080fd5b6118cd87838801611672565b9450602091506118de8287016115cb565b93506040860135818111156118f257600080fd5b8601601f8101881361190357600080fd5b803582811115611915576119156115e2565b8060051b611924858201611642565b918252828101850191858101908b84111561193e57600080fd5b86850192505b838310156119be5782358681111561195c5760008081fd5b85016040818e03601f190112156119735760008081fd5b61197b6115f8565b6119868983016115cb565b815260408201358881111561199b5760008081fd5b6119a98f8b83860101611672565b828b0152508352509186019190860190611944565b809750505050505050509250925092565b600080604083850312156119e257600080fd5b8235915060208301356001600160401b0380821115611a0057600080fd5b9084019060408287031215611a1457600080fd5b611a1c6115f8565b823582811115611a2b57600080fd5b611a3788828601611672565b825250602083013582811115611a4c57600080fd5b929092019160a08388031215611a6157600080fd5b611a69611620565b8335815260208401356020820152604084013583811115611a8957600080fd5b611a9589828701611672565b604083015250606084013583811115611aad57600080fd5b611ab989828701611672565b606083015250608084013583811115611ad157600080fd5b611add89828701611672565b60808301525060208201529396939550929350505050565b600060208284031215611b0757600080fd5b61079b826115cb565b60008060408385031215611b2357600080fd5b50508035926020909101359150565b602081526000825160406020840152611b4e606084018261177e565b90506020840151601f198483030160408501528051825260208101516020830152604081015160a06040840152611b8860a084018261177e565b905060608201518382036060850152611ba1828261177e565b915050608082015191508281036080840152611bbd818361177e565b9695505050505050565b600060208284031215611bd957600080fd5b81356001600160401b03811115611bef57600080fd5b611bfb84828501611672565b949350505050565b600060208284031215611c1557600080fd5b5035919050565b602081528151602082015260018060a01b0360208301511660408201526000604083015160806060840152611c5460a084018261177e565b9050606084015160808401528091505092915050565b600080600060608486031215611c7f57600080fd5b83359250611c8f602085016115cb565b915060408401356001600160401b03811115611caa57600080fd5b611cb686828701611672565b9150509250925092565b600181811c90821680611cd457607f821691505b602082108103611cf457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611d3d57600080fd5b8301803591506001600160401b03821115611d5757600080fd5b602001915036819003821315611d6c57600080fd5b9250929050565b828482376000838201600081528351611d9081836020880161175a565b0195945050505050565b601f8211156110d6576000816000526020600020601f850160051c81016020861015611dc35750805b601f850160051c820191505b818110156109ae57828155600101611dcf565b81516001600160401b03811115611dfb57611dfb6115e2565b611e0f81611e098454611cc0565b84611d9a565b602080601f831160018114611e445760008415611e2c5750858301515b600019600386901b1c1916600185901b1785556109ae565b600085815260208120601f198616915b82811015611e7357888601518255948401946001909101908401611e54565b5085821015611e915787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201611eb357611eb3611cfa565b5060010190565b600060208284031215611ecc57600080fd5b5051919050565b60008251611ee581846020870161175a565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220ab4198c83c76fdc944642d8f5daf457f90118c639ef5d29d32341d64364b7e5964736f6c63430008180033";

type DataRegistryImplementationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataRegistryImplementationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataRegistryImplementation__factory extends ContractFactory {
  constructor(...args: DataRegistryImplementationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DataRegistryImplementation & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DataRegistryImplementation__factory {
    return super.connect(runner) as DataRegistryImplementation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataRegistryImplementationInterface {
    return new Interface(_abi) as DataRegistryImplementationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DataRegistryImplementation {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DataRegistryImplementation;
  }
}
